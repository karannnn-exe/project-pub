pipeline {
    agent any

    environment {
        AWS_ACCOUNT_ID = "571600834960"
        AWS_REGION = "us-west-1"
        ECR_REPO_NAME = "backend-app"
        ECS_CLUSTER = "project_dev_cluster_uw1"
        ECS_SERVICE = "backend-service"
        IMAGE_TAG = "latest"
    }

    stages {
        stage('Login to AWS ECR') {
            steps {
                script {
                    sh """
                    aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com
                    """
                }
            }
        }

        stage('Build Docker Image') {
            steps {
                script {
                    sh """
                    docker build -t $ECR_REPO_NAME .
                    docker tag $ECR_REPO_NAME:latest $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$ECR_REPO_NAME:$IMAGE_TAG
                    """
                }
            }
        }

        stage('Push Image to ECR') {
            steps {
                script {
                    sh """
                    docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$ECR_REPO_NAME:$IMAGE_TAG
                    """
                }
            }
        }

        stage('Force ECS Update') {
            steps {
                script {
                    sh """
                    aws ecs update-service --cluster $ECS_CLUSTER --service $ECS_SERVICE --force-new-deployment
                    """
                }
            }
        }
        stage('Clean Workspace') {
            steps {
                script {
                    cleanWs()
                }
            }
        }

    }
}
